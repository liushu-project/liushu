plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

android {
    namespace 'com.elliot00.liushu'
    compileSdk 34

    defaultConfig {
        applicationId "com.elliot00.liushu"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled = true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = compose.versions.compiler.get().toString()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    ndkVersion '25.2.9519653'
}

cargo {
    module = '../../liushu-ffi'
    apiLevel = 29
    libname = 'liushu_ffi'
    profile = 'release'
    targets = [
            'arm',
            'arm64',
            'x86_64',
            'x86',
    ]
    targetDirectory = '../../target'
}


dependencies {
    coreLibraryDesugaring(libs.core.jdk.desugaring)

    //noinspection UseTomlInstead
    implementation("net.java.dev.jna:jna:5.7.0@aar")

    implementation(androidx.corektx)

    implementation(androidx.constraintlayout.compose)
    implementation(androidx.constraintlayout.constraintlayout)

    implementation(androidx.bundles.lifecycle)

    implementation(platform(compose.bom))
    implementation(compose.ui)
    implementation(compose.ui.graphics)
    implementation(compose.ui.tooling.preview)
    implementation(compose.material3.core)
    androidTestImplementation platform(compose.bom)
    androidTestImplementation(compose.ui.test.junit4)
    debugImplementation(compose.ui.tooling)
    debugImplementation(compose.ui.test.manifest)

    testImplementation(androidx.junit)
    androidTestImplementation(androidx.ext.junit)
    androidTestImplementation(androidx.espresso.core)
}

afterEvaluate {
    // The `cargoBuild` task isn't available until after evaluation.
    android.applicationVariants.all { variant ->
        def productFlavor = ""
        variant.productFlavors.each {
            productFlavor += "${it.name.capitalize()}"
        }
        def buildType = "${variant.buildType.name.capitalize()}"
        tasks["generate${productFlavor}${buildType}Assets"].dependsOn(tasks["cargoBuild"])

    }
}
